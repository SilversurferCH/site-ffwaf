-- This is a site configuration for Gluon v2015.1
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration as community specific changes!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'ffwaf-',

  -- Name of the community.
  site_name = 'Freifunk im Kreis Warendorf',

  -- Shorthand of the community.
  site_code = 'ffwaf',

  -- FIXME: Add a description here
  opkg_repo = 'http://openwrt.draic.info/barrier_breaker/14.07/%S/packages',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.43.0.0/16',
  prefix6 = '2a03:2260:115::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3', -- Europe/Berlin

  -- disable BATMAN ON WAN by default
  mesh_on_wan = false,

  -- Mesh-on-LAN
  mesh_on_lan = true,
  
  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = { '0.de.pool.ntp.org', '1.de.pool.ntp.org', '2.de.pool.ntp.org', '3.de.pool.ntp.org' },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ssid = 'Freifunk',

    -- Specifies the channel width in 802.11n and 802.11ac mode.
    -- Possible values are:
    -- HT20 (single 20MHz channel),
    -- HT40- (2x 20MHz channels, secondary below)
    -- HT40+ (2x 20MHz channels, secondary above)
    htmode = 'HT40+',

    
    mesh_ssid = '02:d1:11:37:fc:38',  -- ESSID used for mesh
    mesh_bssid = '02:d1:11:37:fc:38', -- BSSID used for mesh

    -- Bitrate used for multicast/broadcast packets.
    mesh_mcast_rate = 12000,

    -- (optional) mesh VLAN on 802.11 ad-hoc interface (1-4095)
    -- mesh_vlan = 14,
    client_disabled = false,
    mesh_disabled = false,
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.

  wifi5 = {
    ssid = 'Freifunk',
    channel = 44,
    htmode = 'HT40+',
    mesh_ssid = '02:d1:11:37:fc:38',
    mesh_bssid = '02:d1:11:37:fc:38',
    mesh_mcast_rate = 12000,
    -- mesh_vlan = 14,
    client_disabled = false,
    mesh_disabled = false,
  },


  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.43.0.1',
    ip6 = '2a03:2260:115::1',

    -- anycast MAC of all nodes
    mac = 'de:ad:be:ef:43:01',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    -- enabled = true,
    -- configurable = true,

    mtu = 1406, -- useing 1406 for IPv6 gateways
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 1,
        peers = {
          fusselkater = {
            key = '071576a93dd3e7dcdd6e566024879dd01a118cddbc4258247dd825ad42351394',
            -- This is a list, so you might add multiple entries.
            remotes = {
              'ipv6 "fusselkater.gw.freifunk-muenster.de" port 14242', 
              'ipv4 "fusselkater.gw.freifunk-muenster.de" port 14242',
            },
          },
          commander1024 = {
            key = '9bf14cf6faa8bc0bc87e45b109f065339551cf4ab63a668c1a90897f05eceb36',
            -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
            remotes = {
              '"commander1024.gw.freifunk-muenster.de" port 14242', 
            },
          },        
          fanlin = {
            key = '346234ecf552727233b406131c214b5b58ceb4b72b9503276aff419a02fc3137',
            remotes = {
              '"fanlin.gw.freifunk-muenster.de" port 14242', 
              'ipv6 "2001:4ba0:fff1:49::2" port 14242', 
              'ipv4 "89.163.221.125" port 14242'
            },
          },        
          parad0x = {
            key = '1440c4f7d10c0258b1bb499f18fa8d6a8daf754f8b8ab7ff9b7aa469c0f9a2e2',
            remotes = {
              '"parad0x.gw.freifunk-muenster.de" port 14242', 
              'ipv6 "2a01:4f8:161:72a8::c:1" port 14242', 
              'ipv4 "5.9.67.189" port 14242'
            },
          },
        },

        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },
  },

  autoupdater = {
    -- Still used option?
    enabled = 1,

    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://images.freifunk-muensterland.net/stable/sysupgrade',
        },
        probability = 0.1, -- Still used?

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '418e932e0206d94a975569dd586b907d36306e91eb2f87603f774f872c1e2d95', -- Paulo
        },
      },
      beta = {
        name = 'beta',
        mirrors = {
          'http://images.freifunk-muensterland.net/beta/sysupgrade',
        },
        probability = 0.3,
        good_signatures = 1,
        pubkeys = {
          '418e932e0206d94a975569dd586b907d36306e91eb2f87603f774f872c1e2d95', -- Paulo
        },
      },
      experimental = {
        name = 'experimental',
        mirrors = {
          'http://images.freifunk-muensterland.net/experimental/sysupgrade',
        },
        probability = 0.5,
        good_signatures = 1,
        pubkeys = {
          '418e932e0206d94a975569dd586b907d36306e91eb2f87603f774f872c1e2d95', -- Paulo
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',

      -- You may enable it by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      limit_egress = 200,

      -- Default download limit (kbit/s).
      limit_ingress = 3000,
    },
  },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },

}
