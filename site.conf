-- This is an example site configuration for Gluon v2015.1+
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  -- hostname_prefix = 'ffwaf-',

  -- Name of the community.
  site_name = 'Freifunk im Kreis Warendorf',

  -- Shorthand of the community.
  site_code = 'ffwaf-dom1',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.43.112.0/20',
  prefix6 = '2a03:2260:115:fe03::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3', -- Europe/Berlin

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = { '0.de.pool.ntp.org', '1.de.pool.ntp.org', '2.de.pool.ntp.org', '3.de.pool.ntp.org' },
  
    -- disable BATMAN ON WAN by default
  mesh_on_wan = false,

  -- Mesh-on-LAN
  mesh_on_lan = true,

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ap = {
      ssid = 'Freifunk',
      -- disabled = true, (optional)
    },

    mesh = {
      -- Adjust these values!
      id = 'ffwaf-dom1-mesh',
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      id = 'ffwaf-dom1-mesh',
      mcast_rate = 12000,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.43.112.1',
    ip6 = '2a03:2260:115:ff03::1',

    -- anycast MAC of all nodes
    mac = 'de:ad:be:ef:43:01',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
 fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    -- enabled = true,
    -- configurable = true,

    mtu = 1406, -- useing 1406 for IPv6 gateways
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 1,
        peers = {
          ffwaf_dom1 = {
            key = '86b9a81f16624e0afb89ce694a75b146bbf975a4670e9cbcfbba4a14e0e8d926',
            -- This is a list, so you might add multiple entries.
            remotes = {
              'ipv4 "ffwaf-dom1.freifunk-muensterland.net" port 14242',
            },
          },
        },
        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },
  },
  
    -- tunneldigger_mesh_vpn = {
  --   mtu = 1364,
  --   brokers = {'ffwaf-srv2.freifunk-muensterland.net:10050'},
  -- },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 200,

      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },

  autoupdater = {

    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {
          'http://images.freifunk-muensterland.net/stable/sysupgrade',
        },

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '418e932e0206d94a975569dd586b907d36306e91eb2f87603f774f872c1e2d95', -- paulinsche
          '6c196570ee5f8f4a567d5e2ae9d37c07dc2e40ef737724ae55f424cd079bac07', -- FF-Buildservice
        },
      },
      beta = {
        name = 'beta',
        mirrors = {
          'http://images.freifunk-muensterland.net/beta/sysupgrade',
        },
        good_signatures = 1,
        pubkeys = {
          '418e932e0206d94a975569dd586b907d36306e91eb2f87603f774f872c1e2d95', -- paulinsche
          '6c196570ee5f8f4a567d5e2ae9d37c07dc2e40ef737724ae55f424cd079bac07', -- FF-Buildservice
        },
      },
      experimental = {
        name = 'experimental',
        mirrors = {
          'http://images.freifunk-muensterland.net/experimental/sysupgrade',
        },
        good_signatures = 1,
        pubkeys = {
          '418e932e0206d94a975569dd586b907d36306e91eb2f87603f774f872c1e2d95', -- paulinsche
          '6c196570ee5f8f4a567d5e2ae9d37c07dc2e40ef737724ae55f424cd079bac07', -- FF-Buildservice
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },
}
